buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
//        maven {
//            url 'https://oss.sonatype.org/content/repositories/snapshots/'
//            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
//        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'

        // Jake Wharton이 에러를 수정해서 mavenCentral이 아닌 다른 곳에 SNAPSHOT 버전을 만들어 해결함
//        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.+'
//        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'

        // jcandksolutions가 문제를 해결해서 여기의 것을 사용
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.0.1'
//        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.0.+'
//        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.0.1-SNAPSHOT'
    }
}

apply plugin: 'android'
//apply plugin: 'android-test'

repositories {
    mavenCentral()
    mavenLocal()
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 18
        packageName "com.yooiistudios.morningkit"
    }

    sourceSets {
        instrumentTest.setRoot('src/test')
    }
}

// 출시전까지 주석
apply plugin: 'android-unit-test'
//apply plugin: 'android-instrumentTest'

ext.androidAnnotationsVersion = '2.7.1';

configurations {
    apt
}

dependencies {
    repositories {
        mavenCentral()
    }
    // 안드로이드 기본
    compile 'com.android.support:support-v4:+'
	compile 'com.android.support:appcompat-v7:+'

    // 필요한 라이브러리들
    // 아래와 같은 방식으로도 가능하지만(maven 방식), 짧게 사용함
//    compile group:'com.github.kevinsawicki', name:'wishlist', version:'0.9'

    // JSON 관련 유명한 라이브러리
    compile 'com.google.code.gson:gson:2.2.4'

    // 이미지 로딩 관련 유명
    compile 'com.squareup.picasso:picasso:2.1.1'

    // http 관련
    compile 'com.squareup.okhttp:okhttp:1.2.1'

    // Getter & Setter를 annotation으로 해결
    // (Android Studio용 플러그인용 jar 파일을 웹에서 받아서 <설정 -> plugin -> disk에서 설치> 필요)
    apt 'org.projectlombok:lombok:1.12.2'
    compile 'org.projectlombok:lombok:1.12.2'

    // Android Annotations. 사용하기 위해 Preferences -> Annotations Processor 에서 전체적으로 세팅을 해야만 한다
    // 자세한 내용은 http://www.ashokgelal.com/2012/12/setting-up-intellij-idea-12-with-maven-actionbarsherlock-roboelectric-androidannotations/
    // 그리고 위쪽의 configuration/apt 부분과 아래쪽 build/source/apt 부분이 필수적
    apt "com.googlecode.androidannotations:androidannotations:${androidAnnotationsVersion}"
    compile "com.googlecode.androidannotations:androidannotations-api:${androidAnnotationsVersion}"

    //////////////////////////////////////////////////////////////
    // http://changyeopkim.blogspot.kr/2013/05/android.html 참고 //
    //////////////////////////////////////////////////////////////

    // 믿고쓰는 스퀘어산 이벤트 버스. Activity Result를 통해서 번들을 주고 받거나 하지 않아서 편리
    // http://square.github.com/otto/
    compile 'com.squareup:otto:1.3.4'

    // 뷰 관련 코드를 깔끔하게 정리. 에버노트에서 관련 내용 찾을 것 (3.0.0 -> 4.0.1로 변경)
    compile 'com.jakewharton:butterknife:4.0.1'

    // HttpURLConnection을 깔끔하게 정리
    // https://github.com/kevinsawicki/http-request
    compile 'com.github.kevinsawicki:http-request:5.4.1'

    // 안드로이드 SDK에서 지원하지 않지만 제작자가 원하는 기능들이 포함(조사 필요?)
    // https://github.com/kevinsawicki/wishlist
    // 이것 때문에 실행이 안되었음
//    compile 'com.github.kevinsawicki:wishlist:0.9'

    // xml 시리얼, 디시리얼라이즈 관련
//    http://simple.sourceforge.net/home.php
//    compile 'org.simpleframework:simple-xml:2.7.1'

    // 모든 jar 파일 로딩
    //    compile files('libs/AppRate_1.1.jar');
    compile fileTree(dir: 'libs', include: '*.jar')

    //////////
    // TEST //
    //////////
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.2'
    testCompile 'com.squareup:fest-android:1.0.+'

    instrumentTestCompile 'junit:junit:4.10'
    instrumentTestCompile 'org.robolectric:robolectric:2.2'
    instrumentTestCompile 'com.squareup:fest-android:1.0.+'
}

// 소스를 UTF-8로 컴파일, ../gradlew clean check 로 테스트할 경우 한글주석관련 warning을 없애기 위함
// 되도록이면 Android Studio의 encoding도 전부 UTF-8로 설정해주자
// https://code.google.com/p/android/issues/detail?id=55750
tasks.withType(Compile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}

def getSourceSetName(variant) {
    return new File((String)variant.dirName).getName();
}

android.applicationVariants.all { variant ->
    def aptOutputDir = project.file("build/source/apt")
    def aptOutput = new File(aptOutputDir, variant.dirName)
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"

    android.sourceSets[getSourceSetName(variant)].java.srcDirs+= aptOutput.getPath()

    variant.javaCompile.options.compilerArgs += [
            '-processorpath', configurations.apt.getAsPath(),
            '-AandroidManifestFile=' + variant.processResources.manifestFile,
            '-s', aptOutput
    ]

    variant.javaCompile.source = variant.javaCompile.source.filter { p ->
        return !p.getPath().startsWith(aptOutputDir.getPath())
    }

    variant.javaCompile.doFirst {
        aptOutput.mkdirs()
    }
}